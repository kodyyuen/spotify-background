{"ast":null,"code":"import axios from \"axios\";\nimport { Buffer } from \"buffer\";\nconst MXM_BASE_URL = \"https://api.musixmatch.com/ws/1.1\";\nconst getApiKey = async () => {\n  const response = await axios.post(\"https://accounts.spotify.com/api/token\", {\n    refresh_token: process.env.REACT_APP_SPOTIFY_REFRESH_TOKEN,\n    grant_type: \"refresh_token\"\n  }, {\n    headers: {\n      Authorization: `Basic ${Buffer.from(`${process.env.REACT_APP_SPOTIFY_CLIENT_ID}:${process.env.REACT_APP_SPOTIFY_CLIENT_SECRET}`, \"utf-8\").toString(\"base64\")}`,\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    }\n  });\n  return response.data.access_token;\n};\nexport const getSpotifyCurrentSong = async () => {\n  const apiKey = await getApiKey();\n  const response = await axios.get(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n    headers: {\n      Authorization: `Bearer ${apiKey}`\n    }\n  });\n  return response.data;\n};\nexport const getLyrics = async ({\n  track,\n  artist\n}) => {\n  let url = new URLSearchParams({\n    q_track: track,\n    q_artist: artist,\n    apikey: process.env.REACT_APP_MXM_ACCESS_TOKEN\n  });\n  const search = await axios.get(`${MXM_BASE_URL}/track.search?${url.toString()}`);\n  const {\n    track_id\n  } = search.message.body.track_list.track;\n  url = new URLSearchParams({\n    track_id: track_id,\n    apikey: process.env.REACT_APP_MXM_ACCESS_TOKEN\n  });\n  const lyrics = await axios.get(`${MXM_BASE_URL}/track.search?${url.toString()}`);\n  return lyrics.message.body.lyrics.lyrics_body;\n};","map":{"version":3,"names":["axios","Buffer","MXM_BASE_URL","getApiKey","response","post","refresh_token","process","env","REACT_APP_SPOTIFY_REFRESH_TOKEN","grant_type","headers","Authorization","from","REACT_APP_SPOTIFY_CLIENT_ID","REACT_APP_SPOTIFY_CLIENT_SECRET","toString","data","access_token","getSpotifyCurrentSong","apiKey","get","getLyrics","track","artist","url","URLSearchParams","q_track","q_artist","apikey","REACT_APP_MXM_ACCESS_TOKEN","search","track_id","message","body","track_list","lyrics","lyrics_body"],"sources":["C:/Users/kody/projects/spotify-lyrics-background/src/spotify/app-service.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { Buffer } from \"buffer\";\r\n\r\nconst MXM_BASE_URL = \"https://api.musixmatch.com/ws/1.1\";\r\n\r\nconst getApiKey = async () => {\r\n  const response = await axios.post(\r\n    \"https://accounts.spotify.com/api/token\",\r\n    {\r\n      refresh_token: process.env.REACT_APP_SPOTIFY_REFRESH_TOKEN,\r\n      grant_type: \"refresh_token\",\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `Basic ${Buffer.from(\r\n          `${process.env.REACT_APP_SPOTIFY_CLIENT_ID}:${process.env.REACT_APP_SPOTIFY_CLIENT_SECRET}`,\r\n          \"utf-8\"\r\n        ).toString(\"base64\")}`,\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n    }\r\n  );\r\n\r\n  return response.data.access_token;\r\n};\r\n\r\nexport const getSpotifyCurrentSong = async () => {\r\n  const apiKey = await getApiKey();\r\n\r\n  const response = await axios.get(\r\n    \"https://api.spotify.com/v1/me/player/currently-playing\",\r\n    {\r\n      headers: { Authorization: `Bearer ${apiKey}` },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const getLyrics = async ({ track, artist }) => {\r\n  let url = new URLSearchParams({\r\n    q_track: track,\r\n    q_artist: artist,\r\n    apikey: process.env.REACT_APP_MXM_ACCESS_TOKEN,\r\n  });\r\n  const search = await axios.get(\r\n    `${MXM_BASE_URL}/track.search?${url.toString()}`\r\n  );\r\n\r\n  const { track_id } = search.message.body.track_list.track;\r\n\r\n  url = new URLSearchParams({\r\n    track_id: track_id,\r\n    apikey: process.env.REACT_APP_MXM_ACCESS_TOKEN,\r\n  });\r\n\r\n  const lyrics = await axios.get(\r\n    `${MXM_BASE_URL}/track.search?${url.toString()}`\r\n  );\r\n  return lyrics.message.body.lyrics.lyrics_body;\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAE/B,MAAMC,YAAY,GAAG,mCAAmC;AAExD,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EAC5B,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAC/B,wCAAwC,EACxC;IACEC,aAAa,EAAEC,OAAO,CAACC,GAAG,CAACC,+BAA+B;IAC1DC,UAAU,EAAE;EACd,CAAC,EACD;IACEC,OAAO,EAAE;MACPC,aAAa,EAAG,SAAQX,MAAM,CAACY,IAAI,CAChC,GAAEN,OAAO,CAACC,GAAG,CAACM,2BAA4B,IAAGP,OAAO,CAACC,GAAG,CAACO,+BAAgC,EAAC,EAC3F,OACF,CAAC,CAACC,QAAQ,CAAC,QAAQ,CAAE,EAAC;MACtB,cAAc,EAAE;IAClB;EACF,CACF,CAAC;EAED,OAAOZ,QAAQ,CAACa,IAAI,CAACC,YAAY;AACnC,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAG,MAAAA,CAAA,KAAY;EAC/C,MAAMC,MAAM,GAAG,MAAMjB,SAAS,CAAC,CAAC;EAEhC,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACqB,GAAG,CAC9B,wDAAwD,EACxD;IACEV,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASQ,MAAO;IAAE;EAC/C,CACF,CAAC;EACD,OAAOhB,QAAQ,CAACa,IAAI;AACtB,CAAC;AAED,OAAO,MAAMK,SAAS,GAAG,MAAAA,CAAO;EAAEC,KAAK;EAAEC;AAAO,CAAC,KAAK;EACpD,IAAIC,GAAG,GAAG,IAAIC,eAAe,CAAC;IAC5BC,OAAO,EAAEJ,KAAK;IACdK,QAAQ,EAAEJ,MAAM;IAChBK,MAAM,EAAEtB,OAAO,CAACC,GAAG,CAACsB;EACtB,CAAC,CAAC;EACF,MAAMC,MAAM,GAAG,MAAM/B,KAAK,CAACqB,GAAG,CAC3B,GAAEnB,YAAa,iBAAgBuB,GAAG,CAACT,QAAQ,CAAC,CAAE,EACjD,CAAC;EAED,MAAM;IAAEgB;EAAS,CAAC,GAAGD,MAAM,CAACE,OAAO,CAACC,IAAI,CAACC,UAAU,CAACZ,KAAK;EAEzDE,GAAG,GAAG,IAAIC,eAAe,CAAC;IACxBM,QAAQ,EAAEA,QAAQ;IAClBH,MAAM,EAAEtB,OAAO,CAACC,GAAG,CAACsB;EACtB,CAAC,CAAC;EAEF,MAAMM,MAAM,GAAG,MAAMpC,KAAK,CAACqB,GAAG,CAC3B,GAAEnB,YAAa,iBAAgBuB,GAAG,CAACT,QAAQ,CAAC,CAAE,EACjD,CAAC;EACD,OAAOoB,MAAM,CAACH,OAAO,CAACC,IAAI,CAACE,MAAM,CAACC,WAAW;AAC/C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}