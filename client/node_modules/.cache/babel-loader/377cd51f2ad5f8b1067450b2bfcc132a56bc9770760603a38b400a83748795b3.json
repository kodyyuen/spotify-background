{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getLyricsColorsThunk, getLyricsThunk, getSpotifyCurrentSongThunk } from \"./app-thunks\";\nconst initialState = {\n  songItem: null,\n  songName: \"\",\n  songArtist: \"\",\n  lyrics: \"\",\n  colors: []\n};\nconst AppReducer = createSlice({\n  name: \"app\",\n  initialState,\n  extraReducers: {\n    [getSpotifyCurrentSongThunk.fulfilled]: (state, action) => {\n      state.currentSong = action.payload;\n      if (state.songName !== action.payload.item.name) {\n        state.songName = action.payload.item.name;\n      }\n      if (state.songArtist !== action.payload.item.artists[0].name) {\n        state.songArtist !== action.payload.item.artists[0].name;\n      }\n      console.log(action.payload);\n    },\n    [getSpotifyCurrentSongThunk.rejected]: (state, action) => {\n      console.log(\"getSpotifyCurrentSongThunk.rejected\");\n      console.log(action);\n    },\n    [getLyricsThunk.fulfilled]: (state, action) => {\n      state.lyrics = action.payload.data;\n      console.log(action.payload);\n    },\n    [getLyricsThunk.rejected]: (state, action) => {\n      console.log(\"getLyricsThunk.rejected\");\n      console.log(action);\n    },\n    [getLyricsColorsThunk.fulfilled]: (state, action) => {\n      console.log(action.payload);\n      console.log(JSON.parse(action.payload.data));\n      state.colors = JSON.parse(action.payload.data);\n      console.log(state.colors);\n    },\n    [getLyricsColorsThunk.rejected]: (state, action) => {\n      console.log(\"getLyricsColorsThunk.rejected\");\n      console.log(action);\n    }\n  }\n});\nexport default AppReducer.reducer;","map":{"version":3,"names":["createSlice","getLyricsColorsThunk","getLyricsThunk","getSpotifyCurrentSongThunk","initialState","songItem","songName","songArtist","lyrics","colors","AppReducer","name","extraReducers","fulfilled","state","action","currentSong","payload","item","artists","console","log","rejected","data","JSON","parse","reducer"],"sources":["C:/Users/kody/projects/spotify-background/client/src/spotify/app-reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getLyricsColorsThunk, getLyricsThunk, getSpotifyCurrentSongThunk } from \"./app-thunks\";\r\n\r\nconst initialState = {\r\n  songItem: null,\r\n  songName: \"\",\r\n  songArtist: \"\",\r\n  lyrics: \"\",\r\n  colors: [],\r\n};\r\n\r\nconst AppReducer = createSlice({\r\n  name: \"app\",\r\n  initialState,\r\n  extraReducers: {\r\n    [getSpotifyCurrentSongThunk.fulfilled]: (state, action) => {\r\n      state.currentSong = action.payload;\r\n      if (state.songName !== action.payload.item.name) {\r\n        state.songName = action.payload.item.name;\r\n      }\r\n      if (state.songArtist !== action.payload.item.artists[0].name) {\r\n        state.songArtist !== action.payload.item.artists[0].name\r\n      }\r\n      console.log(action.payload)\r\n    },\r\n    [getSpotifyCurrentSongThunk.rejected]: (state, action) => {\r\n        console.log(\"getSpotifyCurrentSongThunk.rejected\");\r\n        console.log(action);\r\n    },\r\n    [getLyricsThunk.fulfilled]: (state, action) => {\r\n      state.lyrics = action.payload.data;\r\n      console.log(action.payload)\r\n    },\r\n    [getLyricsThunk.rejected]: (state, action) => {\r\n        console.log(\"getLyricsThunk.rejected\");\r\n        console.log(action);\r\n    },\r\n    [getLyricsColorsThunk.fulfilled]: (state, action) => {\r\n      console.log(action.payload)\r\n      console.log(JSON.parse(action.payload.data))\r\n\r\n      state.colors = JSON.parse(action.payload.data);\r\n      console.log(state.colors)\r\n    },\r\n    [getLyricsColorsThunk.rejected]: (state, action) => {\r\n        console.log(\"getLyricsColorsThunk.rejected\");\r\n        console.log(action);\r\n    },\r\n  },\r\n});\r\n\r\nexport default AppReducer.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,oBAAoB,EAAEC,cAAc,EAAEC,0BAA0B,QAAQ,cAAc;AAE/F,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE,EAAE;EACdC,MAAM,EAAE,EAAE;EACVC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,UAAU,GAAGV,WAAW,CAAC;EAC7BW,IAAI,EAAE,KAAK;EACXP,YAAY;EACZQ,aAAa,EAAE;IACb,CAACT,0BAA0B,CAACU,SAAS,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;MACzDD,KAAK,CAACE,WAAW,GAAGD,MAAM,CAACE,OAAO;MAClC,IAAIH,KAAK,CAACR,QAAQ,KAAKS,MAAM,CAACE,OAAO,CAACC,IAAI,CAACP,IAAI,EAAE;QAC/CG,KAAK,CAACR,QAAQ,GAAGS,MAAM,CAACE,OAAO,CAACC,IAAI,CAACP,IAAI;MAC3C;MACA,IAAIG,KAAK,CAACP,UAAU,KAAKQ,MAAM,CAACE,OAAO,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACR,IAAI,EAAE;QAC5DG,KAAK,CAACP,UAAU,KAAKQ,MAAM,CAACE,OAAO,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACR,IAAI;MAC1D;MACAS,OAAO,CAACC,GAAG,CAACN,MAAM,CAACE,OAAO,CAAC;IAC7B,CAAC;IACD,CAACd,0BAA0B,CAACmB,QAAQ,GAAG,CAACR,KAAK,EAAEC,MAAM,KAAK;MACtDK,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAClDD,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;IACvB,CAAC;IACD,CAACb,cAAc,CAACW,SAAS,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7CD,KAAK,CAACN,MAAM,GAAGO,MAAM,CAACE,OAAO,CAACM,IAAI;MAClCH,OAAO,CAACC,GAAG,CAACN,MAAM,CAACE,OAAO,CAAC;IAC7B,CAAC;IACD,CAACf,cAAc,CAACoB,QAAQ,GAAG,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC1CK,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtCD,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;IACvB,CAAC;IACD,CAACd,oBAAoB,CAACY,SAAS,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;MACnDK,OAAO,CAACC,GAAG,CAACN,MAAM,CAACE,OAAO,CAAC;MAC3BG,OAAO,CAACC,GAAG,CAACG,IAAI,CAACC,KAAK,CAACV,MAAM,CAACE,OAAO,CAACM,IAAI,CAAC,CAAC;MAE5CT,KAAK,CAACL,MAAM,GAAGe,IAAI,CAACC,KAAK,CAACV,MAAM,CAACE,OAAO,CAACM,IAAI,CAAC;MAC9CH,OAAO,CAACC,GAAG,CAACP,KAAK,CAACL,MAAM,CAAC;IAC3B,CAAC;IACD,CAACR,oBAAoB,CAACqB,QAAQ,GAAG,CAACR,KAAK,EAAEC,MAAM,KAAK;MAChDK,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5CD,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;IACvB;EACF;AACF,CAAC,CAAC;AAEF,eAAeL,UAAU,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}